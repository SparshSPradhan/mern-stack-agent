{"ast":null,"code":"var _jsxFileName = \"/Users/sparshs.pradhan/Downloads/mern-stack-agent-pro-main/client/src/components/AgentList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useAuth } from \"contexts/AuthContext\";\nimport { useStore } from \"../store/agentTaskUploadStore\";\nimport { Select, MenuItem, Typography, Box, Button } from \"@mui/material\";\nimport AddAgentModal from \"./AddAgentModal\";\nimport FileUpload from \"./FileUpload\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AgentList = () => {\n  _s();\n  const {\n    token,\n    isLoggedIn\n  } = useAuth();\n  const {\n    agents,\n    fetchAgents,\n    fetchTasks,\n    tasks\n  } = useStore();\n  const [selectedAgent, setSelectedAgent] = useState(\"\");\n  const [isAddAgentModalOpen, setIsAddAgentModalOpen] = useState(false);\n  useEffect(() => {\n    if (isLoggedIn) {\n      fetchAgents(token);\n    }\n  }, [fetchAgents, isLoggedIn]);\n  const handleAgentChange = event => {\n    const agentId = event.target.value;\n    setSelectedAgent(agentId);\n    fetchTasks(agentId, token);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: \"Select Agent:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      value: selectedAgent,\n      onChange: handleAgentChange,\n      fullWidth: true,\n      children: agents.map(agent => /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: agent._id,\n        children: agent.name\n      }, agent._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => setIsAddAgentModalOpen(true),\n      sx: {\n        mb: 2\n      },\n      children: \"Add Agent\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddAgentModal, {\n      open: isAddAgentModalOpen,\n      onClose: () => setIsAddAgentModalOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FileUpload, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this), selectedAgent && /*#__PURE__*/_jsxDEV(Box, {\n      mt: 2,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: [\"Tasks for \", selectedAgent, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), tasks.length > 0 ? tasks.map(task => /*#__PURE__*/_jsxDEV(Typography, {\n        children: [task.firstName, \" - \", task.phone, \" - \", task.notes]\n      }, task._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"No tasks assigned.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(AgentList, \"Y5CFw/zIuPs5v5Qt9Cul2bWnlx0=\", false, function () {\n  return [useAuth, useStore];\n});\n_c = AgentList;\nexport default AgentList;\nvar _c;\n$RefreshReg$(_c, \"AgentList\");","map":{"version":3,"names":["React","useEffect","useState","useAuth","useStore","Select","MenuItem","Typography","Box","Button","AddAgentModal","FileUpload","jsxDEV","_jsxDEV","AgentList","_s","token","isLoggedIn","agents","fetchAgents","fetchTasks","tasks","selectedAgent","setSelectedAgent","isAddAgentModalOpen","setIsAddAgentModalOpen","handleAgentChange","event","agentId","target","value","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","onChange","fullWidth","map","agent","_id","name","color","onClick","sx","mb","open","onClose","mt","length","task","firstName","phone","notes","_c","$RefreshReg$"],"sources":["/Users/sparshs.pradhan/Downloads/mern-stack-agent-pro-main/client/src/components/AgentList.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useAuth } from \"contexts/AuthContext\";\nimport { useStore } from \"../store/agentTaskUploadStore\";\nimport { Select, MenuItem, Typography, Box, SelectChangeEvent, Button } from \"@mui/material\";\nimport AddAgentModal from \"./AddAgentModal\";\nimport FileUpload from \"./FileUpload\";\n\nconst AgentList = () => {\n        const { token, isLoggedIn } = useAuth();\n  const { agents, fetchAgents, fetchTasks, tasks } = useStore();\n  const [selectedAgent, setSelectedAgent] = useState(\"\");\n  const [isAddAgentModalOpen, setIsAddAgentModalOpen] = useState(false);\n\n  useEffect(() => {\n    if(isLoggedIn) {\n        fetchAgents(token!);\n    }\n  }, [fetchAgents, isLoggedIn]);\n\nconst handleAgentChange = (event: SelectChangeEvent<string>) => {\n    const agentId = event.target.value;\n    setSelectedAgent(agentId);\n    fetchTasks(agentId, token!);\n};\n\n  return (\n    <Box>\n      <Typography variant=\"h6\">Select Agent:</Typography>\n      <Select value={selectedAgent} onChange={handleAgentChange} fullWidth>\n        {agents.map((agent) => (\n          <MenuItem key={agent._id} value={agent._id}>\n            {agent.name}\n          </MenuItem>\n        ))}\n      </Select>\n\n      {/* Button to open modal */}\n      <Button \n        variant=\"contained\" \n        color=\"primary\" \n        onClick={() => setIsAddAgentModalOpen(true)}\n        sx={{ mb: 2 }}\n      >\n        Add Agent\n      </Button>\n      <AddAgentModal open={isAddAgentModalOpen} onClose={() => setIsAddAgentModalOpen(false)} />\n\n    <FileUpload />\n\n      {selectedAgent && (\n        <Box mt={2}>\n          <Typography variant=\"h6\">Tasks for {selectedAgent}:</Typography>\n          {tasks.length > 0 ? (\n            tasks.map((task) => (\n              <Typography key={task._id}>\n                {task.firstName} - {task.phone} - {task.notes}\n              </Typography>\n            ))\n          ) : (\n            <Typography>No tasks assigned.</Typography>\n          )}\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default AgentList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}