{"ast":null,"code":"var _jsxFileName = \"/Users/sparshs.pradhan/Downloads/mern-stack-agent-pro-main/client/src/contexts/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect, useMemo } from 'react';\nimport axios from 'utils/axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initContext = {\n  token: null,\n  account: null,\n  isLoggedIn: false,\n  register: async () => {},\n  login: async () => {},\n  logout: () => {}\n};\n\n// init context\nconst AuthContext = /*#__PURE__*/createContext(initContext);\nconst {\n  Provider\n} = AuthContext;\n\n// export the consumer\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n\n// export the provider\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [token, setToken] = useState(localStorage.getItem('token') || initContext.token);\n  const [account, setAccount] = useState(initContext.account);\n  const [isLoggedIn, setIsLoggedIn] = useState(initContext.isLoggedIn);\n  const register = formData => {\n    return new Promise((resolve, reject) => {\n      axios.post('/auth/register', formData).then(({\n        data: {\n          data: accountData,\n          token: accessToken\n        }\n      }) => {\n        setAccount(accountData);\n        setToken(accessToken);\n        setIsLoggedIn(true);\n        resolve(true);\n      }).catch(error => {\n        var _error$response, _error$response$data;\n        reject((error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message);\n      });\n    });\n  };\n  const login = formData => {\n    return new Promise((resolve, reject) => {\n      axios.post('/auth/login', formData).then(({\n        data: {\n          data: accountData,\n          token: accessToken\n        }\n      }) => {\n        setAccount(accountData);\n        setToken(accessToken);\n        setIsLoggedIn(true);\n        resolve(true);\n      }).catch(error => {\n        var _error$response2, _error$response2$data;\n        reject((error === null || error === void 0 ? void 0 : (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message);\n      });\n    });\n  };\n  const logout = () => {\n    setIsLoggedIn(false);\n    setAccount(null);\n    setToken(null);\n  };\n  const loginWithToken = async () => {\n    try {\n      const {\n        data: {\n          data: accountData,\n          token: accessToken\n        }\n      } = await axios.get('/auth/login', {\n        headers: {\n          authorization: `Bearer ${token}`\n        }\n      });\n      setAccount(accountData);\n      setToken(accessToken);\n      setIsLoggedIn(true);\n    } catch (error) {\n      var _error$response3;\n      console.error(error);\n      if ((error === null || error === void 0 ? void 0 : (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.statusCode) === 401) setToken(null);\n    }\n  };\n\n  // This side effect keeps local storage updated with recent token value,\n  // making sure it can be re-used upon refresh or re-open browser\n  useEffect(() => {\n    if (token) {\n      localStorage.setItem('token', token);\n    } else {\n      localStorage.removeItem('token');\n    }\n  }, [token]);\n\n  // This side effect runs only if we have a token, but no account or logged-in boolean.\n  // This \"if\" statement is \"true\" only when refreshed, or re-opened the browser,\n  // if true, it will then ask the backend for the account information (and will get them if the token hasn't expired)\n  useEffect(() => {\n    if (!isLoggedIn && !account && token) loginWithToken();\n  }, [isLoggedIn, account, token]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const value = useMemo(() => ({\n    token,\n    account,\n    isLoggedIn,\n    register,\n    login,\n    logout\n  }), [token, account, isLoggedIn]);\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"IUqJxT8kpHQ/X3tfnpLhjkqflQ8=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useMemo","axios","jsxDEV","_jsxDEV","initContext","token","account","isLoggedIn","register","login","logout","AuthContext","Provider","useAuth","_s","AuthProvider","children","_s2","setToken","localStorage","getItem","setAccount","setIsLoggedIn","formData","Promise","resolve","reject","post","then","data","accountData","accessToken","catch","error","_error$response","_error$response$data","response","message","_error$response2","_error$response2$data","loginWithToken","get","headers","authorization","_error$response3","console","statusCode","setItem","removeItem","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sparshs.pradhan/Downloads/mern-stack-agent-pro-main/client/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, type PropsWithChildren, useMemo } from 'react'\nimport axios from 'utils/axios'\nimport { type FormData, type Account } from '@types'\n\ninterface Context {\n  token: string | null\n  account: Account | null\n  isLoggedIn: boolean\n  register: (payload: FormData) => Promise<any>\n  login: (payload: FormData) => Promise<any>\n  logout: () => void\n}\n\nconst initContext: Context = {\n  token: null,\n  account: null,\n  isLoggedIn: false,\n  register: async () => {},\n  login: async () => {},\n  logout: () => {},\n}\n\n// init context\nconst AuthContext = createContext(initContext)\nconst { Provider } = AuthContext\n\n// export the consumer\nexport const useAuth = () => useContext(AuthContext)\n\n// export the provider\nexport const AuthProvider = ({ children }: PropsWithChildren) => {\n  const [token, setToken] = useState(localStorage.getItem('token') || initContext.token)\n  const [account, setAccount] = useState(initContext.account)\n  const [isLoggedIn, setIsLoggedIn] = useState(initContext.isLoggedIn)\n\n  const register = (formData: FormData) => {\n    return new Promise((resolve, reject) => {\n      axios\n        .post('/auth/register', formData)\n        .then(({ data: { data: accountData, token: accessToken } }) => {\n          setAccount(accountData)\n          setToken(accessToken)\n          setIsLoggedIn(true)\n          resolve(true)\n        })\n        .catch((error) => {\n          reject(error?.response?.data?.message || error.message)\n        })\n    })\n  }\n\n  const login = (formData: FormData) => {\n    return new Promise((resolve, reject) => {\n      axios\n        .post('/auth/login', formData)\n        .then(({ data: { data: accountData, token: accessToken } }) => {\n          setAccount(accountData)\n          setToken(accessToken)\n          setIsLoggedIn(true)\n          resolve(true)\n        })\n        .catch((error) => {\n          reject(error?.response?.data?.message || error.message)\n        })\n    })\n  }\n\n  const logout = () => {\n    setIsLoggedIn(false)\n    setAccount(null)\n    setToken(null)\n  }\n\n  const loginWithToken = async () => {\n    try {\n      const {\n        data: { data: accountData, token: accessToken },\n      } = await axios.get('/auth/login', {\n        headers: {\n          authorization: `Bearer ${token}`,\n        },\n      })\n\n      setAccount(accountData)\n      setToken(accessToken)\n      setIsLoggedIn(true)\n    } catch (error: any) {\n      console.error(error)\n      if (error?.response?.statusCode === 401) setToken(null)\n    }\n  }\n\n  // This side effect keeps local storage updated with recent token value,\n  // making sure it can be re-used upon refresh or re-open browser\n  useEffect(() => {\n    if (token) {\n      localStorage.setItem('token', token)\n    } else {\n      localStorage.removeItem('token')\n    }\n  }, [token])\n\n  // This side effect runs only if we have a token, but no account or logged-in boolean.\n  // This \"if\" statement is \"true\" only when refreshed, or re-opened the browser,\n  // if true, it will then ask the backend for the account information (and will get them if the token hasn't expired)\n  useEffect(() => {\n    if (!isLoggedIn && !account && token) loginWithToken()\n  }, [isLoggedIn, account, token]) // eslint-disable-line react-hooks/exhaustive-deps\n\n  const value = useMemo(() => ({ token, account, isLoggedIn, register, login, logout }), [token, account, isLoggedIn])\n\n  return <Provider value={value}>{children}</Provider>\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}